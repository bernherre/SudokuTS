name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  MODEL: qwen2.5-coder:7b
  NO_PROXY: "127.0.0.1,localhost"

jobs:
  review:
    name: LLM Code Review (Ollama)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      # Estabilidad > velocidad dentro del contenedor (puedes subir a "2" si va sobrado)
      REVIEW_MAX_CONCURRENCY: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Start Ollama in Docker (keep-alive)
        env:
          NO_PROXY: "127.0.0.1,localhost"
        run: |
          set -e
          docker run -d --name ollama -p 11434:11434 \
            -e OLLAMA_KEEP_ALIVE=10m \
            -v ollama:/root/.ollama \
            ollama/ollama:latest
          echo "Esperando a que Ollama escuche..."
          for i in $(seq 1 40); do
            if curl -sS --fail --max-time 5 http://127.0.0.1:11434/api/tags >/dev/null; then
              echo "Ollama OK"; break
            fi
            sleep 2
          done

      - name: Pull ${{ env.MODEL }}
        run: |
          docker exec ollama ollama pull "${MODEL}"
          docker exec ollama ollama list

      - name: Smoke test API (${{ env.MODEL }})
        run: |
          curl -sS -X POST http://127.0.0.1:11434/api/chat \
            -H "Content-Type: application/json" \
            -d '{"model":"'"${MODEL}"'","stream":false,"messages":[{"role":"user","content":"ok"}],"keep_alive":"10m"}' \
            | head -c 200

      # --- Solo PR: recolecta archivos cambiados (y filtra a código) ---
      - name: Collect changed files (PR only)
        id: changed
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const pr = context.payload.pull_request;
            const per_page = 100;
            let page = 1, files = [];
            while (true) {
              const { data } = await github.rest.pulls.listFiles({
                ...context.repo, pull_number: pr.number, per_page, page
              });
              files.push(...data);
              if (data.length < per_page) break;
              page++;
            }
            // Mantén SOLO código (evita .md/.yml/.json de config para bajar tokens/latencia)
            const paths = files
              .filter(f => f.status !== 'removed')
              .map(f => f.filename)
              .filter(p => p.match(/\.(ts|tsx|js|jsx|py|cs|java|go|rs)$/i));
            fs.writeFileSync('changed-files.txt', paths.join('\n'));
            core.setOutput('count', String(paths.length));
            core.setOutput('path', 'changed-files.txt');

      - name: Debug count
        if: ${{ github.event_name == 'pull_request' }}
        env:
          CHANGED_COUNT: ${{ steps.changed.outputs.count }}
        run: |
            echo "Changed count: ${CHANGED_COUNT:-0}""

      # --- PR con cambiados → usa lista ---
      - name: Run Ollama Code Review (PR changed files)
        if: ${{ github.event_name == 'pull_request' && steps.changed.outputs.count != '0' }}
        uses: bernherre/checkwithai/action-ollama-codereview@v1
        env:
          REVIEW_MAX_CONCURRENCY: ${{ env.REVIEW_MAX_CONCURRENCY }}
        with:
          model: ${{ env.MODEL }}
          server_url: http://127.0.0.1:11434
          file_list_path: ${{ steps.changed.outputs.path }}
          exclude_glob: |
            **/node_modules/**
            **/dist/**
            **/build/**
            **/.next/**
            **/coverage/**
            **/ollama-review-report/**
            action-ollama-codereview/**
          fail_on_critica: "true"
          retention_days: "7"
          # performance / resiliencia
          request_timeout_ms: "600000"   # 10 min por archivo (primeras corridas). Luego puedes bajar a 300000
          max_bytes_per_file: "200000"   # 200 KB para acelerar
          ollama_num_predict: "192"
          ollama_num_ctx: "1024"
          ollama_temperature: "0"

      # --- Fallback: push a main o PR sin cambiados de código ---
      - name: Run Ollama Code Review (fallback solo código)
        if: ${{ github.event_name != 'pull_request' || steps.changed.outputs.count == '0' }}
        uses: bernherre/checkwithai/action-ollama-codereview@v1
        env:
          REVIEW_MAX_CONCURRENCY: ${{ env.REVIEW_MAX_CONCURRENCY }}
        with:
          model: ${{ env.MODEL }}
          server_url: http://127.0.0.1:11434
          file_glob: "src/**/*.{ts,tsx,js,jsx,py,cs,java,go,rs}"
          exclude_glob: |
            **/node_modules/**
            **/dist/**
            **/build/**
            **/.next/**
            **/coverage/**
            **/ollama-review-report/**
            action-ollama-codereview/**
          fail_on_critica: "true"
          retention_days: "7"
          request_timeout_ms: "600000"
          max_bytes_per_file: "200000"
          ollama_num_predict: "192"
          ollama_num_ctx: "1024"
          ollama_temperature: "0"

      - name: Upload review artifact
        uses: actions/upload-artifact@v4
        with:
          name: ollama-review
          path: ollama-review-report/**
          retention-days: 7

      - name: Dump Ollama logs on failure
        if: failure()
        run: docker logs --tail 200 ollama || true

  build:
    name: Build static site
    needs: review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install
        run: npm ci || npm i
      - name: Build
        run: npm run build
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    name: Deploy to Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
