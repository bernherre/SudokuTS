name: Malware Scan (via checkwithai action)

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write          # necesario para comentar en commits
  pull-requests: write     # necesario para comentar en PRs

concurrency:
  group: "malware-scan"
  cancel-in-progress: true

env:
  MODEL: qwen2.5-coder:7b
  NO_PROXY: "127.0.0.1,localhost"
  REVIEW_MAX_CONCURRENCY: "1"

jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 35

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Opción A: usar Ollama local en el runner (recomendado) ---
      - name: Setup Ollama (no Docker)
        uses: ai-action/setup-ollama@v1

      - name: Cache Ollama models
        uses: actions/cache@v4
        with:
          path: ~/.ollama/models
          key: ollama-${{ runner.os }}-${{ env.MODEL }}
          restore-keys: |
            ollama-${{ runner.os }}-

      - name: Pull & warm model
        run: |
          set -e
          ollama pull "${MODEL}"
          curl -sS -X POST http://127.0.0.1:11434/api/chat \
            -H "Content-Type: application/json" \
            -d '{"model":"'"${MODEL}"'","stream":false,"messages":[{"role":"user","content":"ok"}],"keep_alive":"10m"}' \
            | head -c 200 || true

      # --- Opción B (alternativa): si ya tienes un servidor Ollama propio, comenta las 3 steps de arriba
      #     y ajusta 'server_url' más abajo a tu endpoint (https://mi-servidor-ollama:11434)

      # PR: sólo archivos cambiados (incluye yml/json/shell por riesgos de supply chain/CI)
      - name: Collect changed files (PR only)
        id: changed
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const pr = context.payload.pull_request;
            const per_page = 100;
            let page = 1, files = [];
            while (true) {
              const { data } = await github.rest.pulls.listFiles({
                ...context.repo, pull_number: pr.number, per_page, page
              });
              files.push(...data);
              if (data.length < per_page) break;
              page++;
            }
            const paths = files
              .filter(f => f.status !== 'removed')
              .map(f => f.filename)
              .filter(p => p.match(/\.(ts|tsx|js|jsx|py|cs|java|go|rs|sh|bash|ps1|ya?ml|json|toml|lock|gradle|pom\.xml|csproj)$/i));
            fs.writeFileSync('changed-files.txt', paths.join('\n'));
            core.setOutput('count', String(paths.length));
            core.setOutput('path', 'changed-files.txt');

      - name: Debug changed count
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "Changed count: ${{ steps.changed.outputs.count || '0' }}"

      # Ejecuta tu acción desde el repo externo (reusable action por ref)
      # Reemplaza `bernherre/checkwithai` y la ref `@v1` si usas otra ruta/tag.
      - name: Malware scan (PR changed files)
        id: scan_pr
        if: ${{ github.event_name == 'pull_request' && steps.changed.outputs.count != '0' }}
        uses: bernherre/checkwithai/action-ollama-malware-scan@v1
        env:
          REVIEW_MAX_CONCURRENCY: ${{ env.REVIEW_MAX_CONCURRENCY }}
        with:
          model: ${{ env.MODEL }}
          server_url: http://127.0.0.1:11434
          file_list_path: ${{ steps.changed.outputs.path }}
          exclude_glob: |
            **/node_modules/**
            **/dist/**
            **/build/**
            **/.next/**
            **/coverage/**
            **/.git/**
            **/ollama-malware-report/**
          fail_on_malicious: "true"
          retention_days: "7"
          request_timeout_ms: "900000"
          max_bytes_per_file: "256000"
          ollama_num_predict: "224"
          ollama_num_ctx: "2048"
          ollama_temperature: "0.3"
          malware_max_heuristic_findings: "20"

      - name: Malware scan (fallback - full repo)
        id: scan_fb
        if: ${{ github.event_name != 'pull_request' || steps.changed.outputs.count == '0' }}
        uses: bernherre/checkwithai/action-ollama-malware-scan@v1
        env:
          REVIEW_MAX_CONCURRENCY: ${{ env.REVIEW_MAX_CONCURRENCY }}
        with:
          model: ${{ env.MODEL }}
          server_url: http://127.0.0.1:11434
          file_glob: "**/*.{ts,tsx,js,jsx,py,cs,java,go,rs,sh,bash,ps1,yml,yaml,json,toml,lock,gradle,xml,csproj}"
          exclude_glob: |
            **/node_modules/**
            **/dist/**
            **/build/**
            **/.next/**
            **/coverage/**
            **/.git/**
            **/ollama-malware-report/**
          fail_on_malicious: "true"
          retention_days: "7"
          request_timeout_ms: "900000"
          max_bytes_per_file: "256000"
          ollama_num_predict: "224"
          ollama_num_ctx: "2048"
          ollama_temperature: "0.3"
          malware_max_heuristic_findings: "20"

      # Comentarios con el resumen (PR y push)
      - name: Comment on PR with summary
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body-path: ${{ steps.scan_pr.outputs.summary_md_path || steps.scan_fb.outputs.summary_md_path }}

      - name: Comment on commit with summary (push)
        if: ${{ github.event_name == 'push' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const core = require('@actions/core');
            const path = process.env.SUMMARY_PATH || '';
            if (!path || !fs.existsSync(path)) {
              core.warning(`No summary found at "${path}"`);
              return;
            }
            const body = fs.readFileSync(path, 'utf8');
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body
            });
        env:
          SUMMARY_PATH: ${{ steps.scan_pr.outputs.summary_md_path || steps.scan_fb.outputs.summary_md_path }}

      - name: Upload malware report artifact
        uses: actions/upload-artifact@v4
        with:
          name: ollama-malware-report
          path: ollama-malware-report/**
          retention-days: 7
